import{_ as p,C as r,c as o,o as h,j as i,a as t,aA as n,G as e,w as l}from"./chunks/framework.Cva0UXtJ.js";const z=JSON.parse('{"title":"Functions","description":"","frontmatter":{},"headers":[],"relativePath":"API/functions.md","filePath":"API/functions.md","lastUpdated":null}'),d={name:"API/functions.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""};function I(q,s,V,M,N,R){const a=r("Badge");return h(),o("div",null,[s[102]||(s[102]=i("h1",{id:"functions",tabindex:"-1"},[t("Functions "),i("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1)),s[103]||(s[103]=i("h2",{id:"Drawing-functions",tabindex:"-1"},[t("Drawing functions "),i("a",{class:"header-anchor",href:"#Drawing-functions","aria-label":'Permalink to "Drawing functions {#Drawing-functions}"'},"​")],-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"AlgebraOfGraphics.draw",href:"#AlgebraOfGraphics.draw"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.draw")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[5]||(s[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d, scales</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scales</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scales</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); [axis, figure, facet, legend, colorbar])</span></span></code></pre></div><p>Draw a <a href="/v0.9.7/API/types#AlgebraOfGraphics.AbstractDrawable"><code>AlgebraOfGraphics.AbstractDrawable</code></a> object <code>d</code>. In practice, <code>d</code> will often be a <a href="/v0.9.7/API/types#AlgebraOfGraphics.Layer"><code>AlgebraOfGraphics.Layer</code></a> or <a href="/v0.9.7/API/types#AlgebraOfGraphics.Layers"><code>AlgebraOfGraphics.Layers</code></a>. Scale options can be passed as an optional second argument. The output can be customized by passing named tuples or dictionaries with settings via the <code>axis</code>, <code>figure</code>, <code>facet</code>, <code>legend</code> or <code>colorbar</code> keywords. Legend and colorbar are drawn automatically unless <code>show = false</code> is passed to the keyword arguments of either <code>legend</code> or <code>colorbar</code>.</p><p>For finer control, use <a href="/v0.9.7/API/functions#AlgebraOfGraphics.draw!"><code>draw!</code></a>, <a href="/v0.9.7/API/functions#AlgebraOfGraphics.legend!"><code>legend!</code></a>, and <a href="/v0.9.7/API/functions#AlgebraOfGraphics.colorbar!"><code>colorbar!</code></a> independently.</p><p><strong>Figure options</strong></p><p>AlgebraOfGraphics accepts the following special keywords under the <code>figure</code> keyword, the remaining attributes are forwarded to Makie&#39;s <code>Figure</code> constructor. The <code>title</code>, <code>subtitle</code> and <code>footnotes</code> arguments accept objects of any kind that Makie&#39;s <code>Label</code> or <code>text</code> function can handle, such as <code>rich</code> text.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>- `title`</span></span>\n<span class="line"><span>- `subtitle`</span></span>\n<span class="line"><span>- `titlesize::Union{Nothing,Float64}`</span></span>\n<span class="line"><span>- `subtitlesize::Union{Nothing,Float64}`</span></span>\n<span class="line"><span>- `titlealign::Union{Nothing,Symbol}`</span></span>\n<span class="line"><span>- `titlecolor`</span></span>\n<span class="line"><span>- `subtitlecolor`</span></span>\n<span class="line"><span>- `titlefont`</span></span>\n<span class="line"><span>- `subtitlefont`</span></span>\n<span class="line"><span>- `titlelineheight`</span></span>\n<span class="line"><span>- `subtitlelineheight`</span></span>\n<span class="line"><span>- `footnotes::Union{Nothing,Vector{Any}}`</span></span>\n<span class="line"><span>- `footnotesize::Union{Nothing,Float64}`</span></span>\n<span class="line"><span>- `footnotefont`</span></span>\n<span class="line"><span>- `footnotecolor`</span></span>\n<span class="line"><span>- `footnotealign`</span></span>\n<span class="line"><span>- `footnotelineheight`</span></span></code></pre></div>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[6]||(s[6]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pagination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draw each element of <code>Pagination</code> <code>p</code> and return a <code>Vector{FigureGrid}</code>. Keywords <code>kws</code> are passed to the underlying <code>draw</code> calls.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[3]||(s[3]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pagination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Draw the ith element of <code>Pagination</code> <code>p</code> and return a <code>FigureGrid</code>. Keywords <code>kws</code> are passed to the underlying <code>draw</code> call.</p><p>You can retrieve the number of elements using <code>length(p)</code>.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[4]||(s[4]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"AlgebraOfGraphics.draw!",href:"#AlgebraOfGraphics.draw!"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.draw!")],-1)),s[9]||(s[9]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDrawable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scales</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scales</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scales</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); [axis, facet])</span></span></code></pre></div><p>Draw a <a href="/v0.9.7/API/types#AlgebraOfGraphics.AbstractDrawable"><code>AlgebraOfGraphics.AbstractDrawable</code></a> object <code>d</code> on <code>fig</code>. In practice, <code>d</code> will often be a <a href="/v0.9.7/API/types#AlgebraOfGraphics.Layer"><code>AlgebraOfGraphics.Layer</code></a> or <a href="/v0.9.7/API/types#AlgebraOfGraphics.Layers"><code>AlgebraOfGraphics.Layers</code></a>. <code>fig</code> can be a figure, a position in a layout, or an axis if <code>d</code> has no facet specification. The output can be customized by passing named tuples or dictionaries with settings via the <code>axis</code> or <code>facet</code> keywords.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",g,[i("summary",null,[s[12]||(s[12]=i("a",{id:"AlgebraOfGraphics.colorbar!",href:"#AlgebraOfGraphics.colorbar!"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.colorbar!")],-1)),s[13]||(s[13]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">colorbar!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figpos, grid; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute colorbar for <code>grid</code> (which should be the output of <a href="/v0.9.7/API/functions#AlgebraOfGraphics.draw!"><code>draw!</code></a>) and draw it in position <code>figpos</code>. Attributes allowed in <code>kwargs</code> are the same as <code>MakieLayout.Colorbar</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",u,[i("summary",null,[s[16]||(s[16]=i("a",{id:"AlgebraOfGraphics.legend!",href:"#AlgebraOfGraphics.legend!"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.legend!")],-1)),s[17]||(s[17]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">legend!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(figpos, grid; order </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute legend for <code>grid</code> (which should be the output of <a href="/v0.9.7/API/functions#AlgebraOfGraphics.draw!"><code>draw!</code></a>) and draw it in position <code>figpos</code>. All <code>kwargs</code> are forwarded to Makie&#39;s <code>Legend</code> constructor.</p><p>The order of scales represented in the legend can be changed with the <code>order</code> keyword. By default, legend sections are ordered the same as they appear in the plot specification. Assuming three scales <code>Color</code>, <code>MarkerSize</code> and <code>custom</code> exist in a spec, you can pass a vector to reorder them like <code>[:MarkerSize, :custom, :Color]</code>, or merge multiple entries together with a nested vector like <code>[[:MarkerSize, :custom], :Color]</code>, or give merged sections a title with the pair syntax <code>[[:MarkerSize, :custom] =&gt; &quot;Merged group&quot;, :Color]</code>.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",b,[i("summary",null,[s[20]||(s[20]=i("a",{id:"AlgebraOfGraphics.paginate",href:"#AlgebraOfGraphics.paginate"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.paginate")],-1)),s[21]||(s[21]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">paginate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(l, sc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scales</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); layout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, col</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Paginate <code>l</code>, the <code>Layer</code> or <code>Layers</code> object created by an <code>AlgebraOfGraphics</code> spec, to create a <code>Pagination</code> object.</p><div class="tip custom-block"><p class="custom-block-title">Info</p><p>The pages are created by internally starting with one big facet plot first which includes all the input data, and then splitting it into pages. All scales are fit to the full data, not just the data that is visible on a given page, so a color legend, for example, will show all the categories and not just the ones that happen to be visible on the current page. This behavior changed with version 0.9 - before, each page had separately fit scales. The old behavior had the drawback that palettes were not guaranteed to be consistent across pages, for example, the same category could have different colors on two separate pages.</p></div><p>The <code>Pagination</code> object can be passed to <code>draw</code> which will return a <code>Vector{FigureGrid}</code> rather than a single figure.</p><p>The keywords that limit the number of subplots on each page are the same that are used to specify facets in <code>mapping</code>:</p><ul><li><p><code>layout</code>: Maximum number of subplots in a wrapped linear layout.</p></li><li><p><code>row</code>: Maximum number of rows in a 2D layout.</p></li><li><p><code>col</code>: Maximum number of columns in a 2D layout.</p></li></ul><p><strong>Example</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>d = data((</span></span>
<span class="line"><span>    x = rand(1000),</span></span>
<span class="line"><span>    y = rand(1000),</span></span>
<span class="line"><span>    group1 = rand(string.(&#39;a&#39;:&#39;i&#39;), 1000),</span></span>
<span class="line"><span>    group2 = rand(string.(&#39;j&#39;:&#39;r&#39;), 1000),</span></span>
<span class="line"><span>))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>layer_1 = d * mapping(:x, :y, layout = :group1) * visual(Scatter)</span></span>
<span class="line"><span>paginated_1 = paginate(layer_1, layout = 4)</span></span>
<span class="line"><span>figuregrids = draw(paginated_1)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>layer_2 = d * mapping(:x, :y, row = :group1, col = :group2) * visual(Scatter)</span></span>
<span class="line"><span>paginated_2 = paginate(layer_2, row = 4, col = 3)</span></span>
<span class="line"><span>figuregrid = draw(paginated_2, 1) # draw only the first grid</span></span></code></pre></div>`,8)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",y,[i("summary",null,[s[24]||(s[24]=i("a",{id:"AlgebraOfGraphics.scales",href:"#AlgebraOfGraphics.scales"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.scales")],-1)),s[25]||(s[25]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[27]||(s[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scales</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>Scales</code> object containing properties for aesthetic scales that can be passed to <a href="/v0.9.7/API/functions#AlgebraOfGraphics.draw"><code>draw</code></a> and <a href="/v0.9.7/API/functions#AlgebraOfGraphics.draw!"><code>draw!</code></a>. Each keyword should be the name of a scale in the spec that is being drawn. That can either be a default one like <code>Color</code>, <code>Marker</code> or <code>LineStyle</code>, or a custom scale name defined in a <a href="/v0.9.7/reference/mapping#AlgebraOfGraphics.mapping"><code>mapping</code></a> using the <code>scale</code> function.</p><p>The values attached to the keywords must be dict-like, with <code>Symbol</code>s as keys (such as <code>NamedTuple</code>s).</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[104]||(s[104]=i("h2",{id:"Mapping-helpers",tabindex:"-1"},[t("Mapping helpers "),i("a",{class:"header-anchor",href:"#Mapping-helpers","aria-label":'Permalink to "Mapping helpers {#Mapping-helpers}"'},"​")],-1)),i("details",E,[i("summary",null,[s[28]||(s[28]=i("a",{id:"AlgebraOfGraphics.pregrouped",href:"#AlgebraOfGraphics.pregrouped"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.pregrouped")],-1)),s[29]||(s[29]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pregrouped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(positional</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; named</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Equivalent to <code>data(Pregrouped()) * mapping(positional...; named...)</code>. Refer to <a href="/v0.9.7/reference/mapping#AlgebraOfGraphics.mapping"><code>mapping</code></a> for more information.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"AlgebraOfGraphics.direct",href:"#AlgebraOfGraphics.direct"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.direct")],-1)),s[33]||(s[33]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">direct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Return <code>DirectData(x)</code> which marks <code>x</code> for direct use in a <code>mapping</code> that&#39;s used with a table-like <code>data</code> source. As a result, <code>x</code> will be used directly as data, without lookup in the table. If <code>x</code> is not an <code>AbstractArray</code>, it will be expanded like <code>fill(x, n)</code> where <code>n</code> is the number of rows in the <code>data</code> source.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",m,[i("summary",null,[s[36]||(s[36]=i("a",{id:"AlgebraOfGraphics.renamer",href:"#AlgebraOfGraphics.renamer"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.renamer")],-1)),s[37]||(s[37]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">renamer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{AbstractArray, Tuple}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Utility to rename a categorical variable, as in <code>renamer([value1 =&gt; label1, value2 =&gt; label2])</code>. The keys of all pairs should be all the unique values of the categorical variable and the values should be the corresponding labels. The order of <code>arr</code> is respected in the legend.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> renamer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 2&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AlgebraOfGraphics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Renamer{Vector{String}, Vector{String}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Class One</span></span></code></pre></div><p>Alternatively, a sequence of pair arguments may be passed.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> renamer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 2&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AlgebraOfGraphics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Renamer{Tuple{String, String}, Tuple{String, String}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;class 1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Class One</span></span></code></pre></div><p>If <code>arr</code> does not contain <code>Pair</code>s, elements of <code>arr</code> are assumed to be labels, and the unique values of the categorical variable are taken to be the indices of the array. This is particularly useful for <code>dims</code> mappings.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> renamer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AlgebraOfGraphics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Renamer{Nothing, Vector{String}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class One&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Class Two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Class Two</span></span></code></pre></div>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",F,[i("summary",null,[s[40]||(s[40]=i("a",{id:"AlgebraOfGraphics.sorter",href:"#AlgebraOfGraphics.sorter"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.sorter")],-1)),s[41]||(s[41]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sorter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ks)</span></span></code></pre></div><p>Utility to reorder a categorical variable, as in <code>sorter([&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;])</code>. A vararg method <code>sorter(&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;)</code> is also supported. <code>ks</code> should include all the unique values of the categorical variable. The order of <code>ks</code> is respected in the legend.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",C,[i("summary",null,[s[44]||(s[44]=i("a",{id:"AlgebraOfGraphics.nonnumeric",href:"#AlgebraOfGraphics.nonnumeric"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.nonnumeric")],-1)),s[45]||(s[45]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nonnumeric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Transform <code>x</code> into a non numeric type that is printed and sorted in the same way.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",A,[i("summary",null,[s[48]||(s[48]=i("a",{id:"AlgebraOfGraphics.verbatim",href:"#AlgebraOfGraphics.verbatim"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.verbatim")],-1)),s[49]||(s[49]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">verbatim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Signal that <code>x</code> should not be rescaled, but used in the plot as is.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",_,[i("summary",null,[s[52]||(s[52]=i("a",{id:"AlgebraOfGraphics.scale",href:"#AlgebraOfGraphics.scale"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.scale")],-1)),s[53]||(s[53]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[55]||(s[55]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a <code>ScaleID</code> object that can be used in a <a href="/v0.9.7/reference/mapping#AlgebraOfGraphics.mapping"><code>mapping</code></a> to assign a custom id to the mapped variable. This variable will then not be merged into the default scale for its aesthetic type, but instead be handled separately, leading to a separate legend entry.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[54]||(s[54]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",v,[i("summary",null,[s[56]||(s[56]=i("a",{id:"AlgebraOfGraphics.presorted",href:"#AlgebraOfGraphics.presorted"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.presorted")],-1)),s[57]||(s[57]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[59]||(s[59]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Use within a pair expression in <code>mapping</code> to signal that a categorical column from the data source should be used in the original order and not automatically sorted.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># normally, categories would be sorted a, b, c but with \`presorted\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># they stay in the order b, c, a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((; some_column </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:some_column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> presorted)</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[58]||(s[58]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[105]||(s[105]=i("h2",{id:"Theming-and-Palettes",tabindex:"-1"},[t("Theming & Palettes "),i("a",{class:"header-anchor",href:"#Theming-and-Palettes","aria-label":'Permalink to "Theming &amp; Palettes {#Theming-and-Palettes}"'},"​")],-1)),i("details",T,[i("summary",null,[s[60]||(s[60]=i("a",{id:"AlgebraOfGraphics.set_aog_theme!",href:"#AlgebraOfGraphics.set_aog_theme!"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.set_aog_theme!")],-1)),s[61]||(s[61]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[63]||(s[63]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_aog_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set the current theme to a predefined and opinionated theme, as defined by the unexported internal function <a href="/v0.9.7/API/functions#AlgebraOfGraphics.aog_theme"><code>AlgebraOfGraphics.aog_theme</code></a>.</p><p>To tweak the predefined theme, use the function <code>Makie.update_theme!</code>. See the example below on how to change, e.g., default fontsize, title, and markersize.</p><p>For more information about setting themes, see the <code>Theming</code> section of the <code>Makie.jl</code> docs.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie, AlgebraOfGraphics</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set_aog_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sets a prefedined theme</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> update_theme!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(                  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Tweaks the current theme</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           fontsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           markersize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           Axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyDefaultTitle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       )</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[62]||(s[62]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",j,[i("summary",null,[s[64]||(s[64]=i("a",{id:"AlgebraOfGraphics.aog_theme",href:"#AlgebraOfGraphics.aog_theme"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.aog_theme")],-1)),s[65]||(s[65]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[67]||(s[67]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aog_theme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; fonts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firasans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Medium&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firasans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Light&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)])</span></span></code></pre></div><p>Return a <code>NamedTuple</code> of theme settings. Intended for internal use. The provided functionality is exposed to the user by the function <a href="/v0.9.7/API/functions#AlgebraOfGraphics.set_aog_theme!"><code>set_aog_theme!</code></a>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[66]||(s[66]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",O,[i("summary",null,[s[68]||(s[68]=i("a",{id:"AlgebraOfGraphics.from_continuous",href:"#AlgebraOfGraphics.from_continuous"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.from_continuous")],-1)),s[69]||(s[69]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[71]||(s[71]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">from_continuous</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span></code></pre></div><p>Mark a colormap as continuous such that AlgebraOfGraphics will sample a categorical palette from start to end in n steps, and not by using the first n colors.</p><p>You could also use <code>cgrad(colormap, n; categorical = true)</code>, however, this requires you to specify how many levels there are, which <code>from_continuous</code> detects automatically.</p><p>Example:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scales</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; palette </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> from_continuous</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:viridis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span></code></pre></div>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[70]||(s[70]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",x,[i("summary",null,[s[72]||(s[72]=i("a",{id:"AlgebraOfGraphics.wrapped",href:"#AlgebraOfGraphics.wrapped"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.wrapped")],-1)),s[73]||(s[73]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[75]||(s[75]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrapped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; cols </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> automatic, rows </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> automatic, by_col </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an object that can be passed to the <code>Layout</code> scale <code>palette</code> which controls how many rows or columns are allowed at maximum in the wrapped layout. Only one of <code>cols</code> or <code>rows</code> may be set to an integer at the same time. If both are <code>automatic</code>, a squareish configuration is chosen. If <code>by_col</code> is to <code>true</code>, the layout is filled top to bottom first and then column by column.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[74]||(s[74]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[106]||(s[106]=i("h2",{id:"Ticks-helpers",tabindex:"-1"},[t("Ticks helpers "),i("a",{class:"header-anchor",href:"#Ticks-helpers","aria-label":'Permalink to "Ticks helpers {#Ticks-helpers}"'},"​")],-1)),i("details",w,[i("summary",null,[s[76]||(s[76]=i("a",{id:"AlgebraOfGraphics.datetimeticks",href:"#AlgebraOfGraphics.datetimeticks"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.datetimeticks")],-1)),s[77]||(s[77]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[80]||(s[80]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datetimeticks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(datetimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:TimeType}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, labels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractString}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate ticks matching <code>datetimes</code> to the corresponding <code>labels</code>. The result can be passed to <code>xticks</code>, <code>yticks</code>, or <code>zticks</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[78]||(s[78]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[81]||(s[81]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datetimeticks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, datetimes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:TimeType}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute ticks for the given <code>datetimes</code> using a formatting function <code>f</code>. The result can be passed to <code>xticks</code>, <code>yticks</code>, or <code>zticks</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[79]||(s[79]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[107]||(s[107]=i("h2",{id:"Functions-to-be-extended-by-other-packages",tabindex:"-1"},[t("Functions to be extended by other packages "),i("a",{class:"header-anchor",href:"#Functions-to-be-extended-by-other-packages","aria-label":'Permalink to "Functions to be extended by other packages {#Functions-to-be-extended-by-other-packages}"'},"​")],-1)),i("details",G,[i("summary",null,[s[82]||(s[82]=i("a",{id:"AlgebraOfGraphics.mergeable",href:"#AlgebraOfGraphics.mergeable"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.mergeable")],-1)),s[83]||(s[83]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[85]||(s[85]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mergeable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plottype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;: Plot}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, primary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dictionaries.AbstractDictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span></span></code></pre></div><p>Return whether the entries for the layer with <code>plottype</code> and <code>primary</code> should be merged. Merging means that all the data will be passed to a single plot call, instead of creating one plot object per scale.</p><p>Return <code>true</code> if they <strong>should</strong> be merged, and <code>false</code> if <strong>not</strong> (the default).</p><p>Extending packages should also extend this function on their own plot types if they deem it necessary. For example, beeswarm plots and violin plots need to be merged for correctness.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[84]||(s[84]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[108]||(s[108]=i("h2",{id:"Internal-functions",tabindex:"-1"},[t("Internal functions "),i("a",{class:"header-anchor",href:"#Internal-functions","aria-label":'Permalink to "Internal functions {#Internal-functions}"'},"​")],-1)),i("details",D,[i("summary",null,[s[86]||(s[86]=i("a",{id:"AlgebraOfGraphics.scientific_eltype",href:"#AlgebraOfGraphics.scientific_eltype"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.scientific_eltype")],-1)),s[87]||(s[87]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[89]||(s[89]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scientific_eltype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v)</span></span></code></pre></div><p>Determine whether <code>v</code> should be treated as a continuous, geometrical, or categorical array.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[88]||(s[88]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",B,[i("summary",null,[s[90]||(s[90]=i("a",{id:"AlgebraOfGraphics.scientific_type",href:"#AlgebraOfGraphics.scientific_type"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.scientific_type")],-1)),s[91]||(s[91]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[93]||(s[93]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scientific_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determine whether <code>T</code> represents a continuous, geometrical, or categorical variable.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[92]||(s[92]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",S,[i("summary",null,[s[94]||(s[94]=i("a",{id:"AlgebraOfGraphics.plottypes_attributes",href:"#AlgebraOfGraphics.plottypes_attributes"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.plottypes_attributes")],-1)),s[95]||(s[95]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[97]||(s[97]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plottypes_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entries)</span></span></code></pre></div><p>Return plottypes and relative attributes, as two vectors of the same length, for the given <code>entries</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[96]||(s[96]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",P,[i("summary",null,[s[98]||(s[98]=i("a",{id:"AlgebraOfGraphics.compute_attributes",href:"#AlgebraOfGraphics.compute_attributes"},[i("span",{class:"jlbinding"},"AlgebraOfGraphics.compute_attributes")],-1)),s[99]||(s[99]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[101]||(s[101]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compute_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ProcessedLayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, categoricalscales, continuousscales_grid, continuousscales)</span></span></code></pre></div><p>Process attributes of a <code>ProcessedLayer</code>. In particular,</p><ul><li><p>remove AlgebraOfGraphics-specific layout attributes,</p></li><li><p>opt out of Makie cycling mechanism,</p></li><li><p>customize behavior of <code>color</code> (implementing <code>alpha</code> transparency),</p></li><li><p>customize behavior of bar <code>width</code> (default to one unit when not specified),</p></li><li><p>set correct <code>colorrange</code>.</p></li></ul><p>Return computed attributes.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[100]||(s[100]=[i("a",{href:"https://github.com/MakieOrg/AlgebraOfGraphics.jl",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const U=p(d,[["render",I]]);export{z as __pageData,U as default};
